# 配置参考：https://github.com/alibaba/spring-cloud-alibaba/wiki/Nacos-config
# spring-cloud-starter-alibaba-nacos-config 在加载配置的时候，不仅仅加载了以 dataid 为 ${spring.application.name}.${file-extension:properties} 为前缀的基础配置，
# 还加载了dataid为 ${spring.application.name}-${profile}.${file-extension:properties} 的基础配置。
# ${prefix} - ${spring.profiles.active} . ${file-extension},prefix为${spring.application.name}的值，也可以通过prefix参数配置
# 在日常开发中如果遇到多套环境下的不同配置，可以通过Spring 提供的 ${spring.profiles.active} 这个配置项来配置。

# Spring Cloud Alibaba Nacos Config 目前提供了三种配置能力从 Nacos 拉取相关的配置。
# A: 通过 spring.cloud.nacos.config.shared-configs[n].data-id 支持多个共享 Data Id 的配置
# B: 通过 spring.cloud.nacos.config.extension-configs[n].data-id 的方式支持多个扩展 Data Id 的配置
# C: 通过内部相关规则(应用名、应用名+ Profile )自动生成相关的 Data Id 配置
#当三种方式共同使用时，他们的一个优先级关系是:A < B < C
server:
  port: 8087
spring:
  application:
    name: sc-alibaba-gateway
  cloud:
    nacos:
      config:
        server-addr: ${sentinel.server-addr}
        namespace: ${sentinel.namespace}
        file-extension: yaml
#        # 读取多个配置文件
#        extension-configs[0]:
#          data-id: gateway.route.rule.yaml
#          group: config.gateway
#          refresh: true
#      username: nacos # nacos1.2以上版本增加客户端认证，需要认证才能读取配置
#      password: vfc2020!@#
      discovery:
        server-addr: ${sentinel.server-addr} # 服务注册，可以通过服务名转发
        namespace: ${sentinel.namespace}
        metadata:
          user:
            name: ${spring.security.user.name}  # 向注册中心注册本服务端点访问认证信息。这里不是配置访问客户端端点的认证信息，是本服务的
            password: ${spring.security.user.password}
            # management.context-path= # 访问地址，如果不是默认的actuator则需要配置

        watch:
          enabled: false # 是否开启NacosWatch,向spring boot admin刷新新注册的服务
        watch-delay: 10000 # Nacos watch执行时间间隔默认30s
sentinel:
  server-addr: 192.168.5.105:8848
  namespace:

---
# profile多环境配置
---
spring:
  profiles: prod
sentinel:
  server-addr: 192.168.5.105:8848
  namespace: fd0e394c-e82d-4bad-bf56-264b4ec89191

# bootstrap配置加载优先于application配置。
---
spring:
  profiles:
    # maven变量，打包时会被替换成相应的profile。如果需要本地启动，则需要修改为对应的profile
    # 这里的profile激活只用于本地启动，实际线上环境会使用启动参数激活profile
    active: local #@profileActive@