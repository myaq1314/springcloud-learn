server:
  port: 8087
  tomcat:
    max-connections: 10000
spring:
  application:
    name: sc-gateway
  cloud:
      #        # 读取多个配置文件
      #        extension-configs[0]:
      #          data-id: gateway.route.rule.yaml
      #          group: config.gateway
      #          refresh: true
      #      username: nacos # nacos1.2以上版本增加客户端认证，需要认证才能读取配置
      #      password: vfc2020!@#
    gateway:
      # 设置gateway转发到后台服务器的请求参数，超时时间等
      httpclient:
        response-timeout: PT10.1S
        connect-timeout: 10000
        pool:
          # https://blog.csdn.net/rickiyeat/article/details/107900585
          max-idle-time: 8s  # 必须设置该时间，且要比所有后端服务的connectTimeout时间短，否则可能会报错：Connection prematurely closed BEFORE response。

    sentinel:
      filter: # 屏蔽URL资源，显示网关路由资源
        enabled: false
  security:
    user: # http端点认证用户
      name: admin
      password: client2020#
management:
  endpoints:
    web:
      exposure:
        include: '*' # 暴露web方式访问的所有端点
    jmx:
      exposure:
        exclude: '*' # 关闭端点JMX访问方式
  endpoint:
    health:
      show-details: always

ahas:
  namespace: default
  license:
    d86d37a37296462bb7dd11e688380540
project:
  name: ${spring.application.name}


sentinel:
  server-addr: 172.16.80.153:8848
  namespace: 9820bd7a-1df1-4f20-96fd-a8427bd92fdd

---
# profile多环境配置
---
spring:
  config:
    activate:
      on-profile: prod
sentinel:
  server-addr: 172.16.80.153:8848
  namespace: fd0e394c-e82d-4bad-bf56-264b4ec89191
---
spring:
  config:
    activate:
      on-profile: pressure
sentinel:
  server-addr: 172.16.80.153:8848
  namespace: 9820bd7a-1df1-4f20-96fd-a8427bd92fdd
# bootstrap配置加载优先于application配置。

---
spring:
  profiles:
    # maven变量，打包时会被替换成相应的profile。如果需要本地启动，则需要修改为对应的profile
    # 这里的profile激活只用于本地启动，实际线上环境会使用启动参数激活profile
    active: pressure #@profileActive@
    # 引入公共nacos配置
    include: nacos
# spring cloud2020之后要是有bootstrap属性配置必须要添加 spring-cloud-starter-bootstrap 模块

