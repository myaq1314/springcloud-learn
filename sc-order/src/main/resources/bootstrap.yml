server:
  port: 7093
  tomcat:
    threads:
      max: 500
spring:
  application:
    name: sc-order
  cloud:
    nacos:
      config:
        server-addr: ${sentinel.server-addr}
        namespace: ${sentinel.namespace}
        file-extension: yaml
#        # 读取多个配置文件
#        extension-configs[0]:
#          data-id: gateway.route.rule.yaml
#          group: config.gateway
#          refresh: true
#      username: nacos # nacos1.2以上版本增加客户端认证，需要认证才能读取配置
#      password: vfc2020!@#
      discovery:
        server-addr: ${sentinel.server-addr} # 服务注册，可以通过服务名转发
        namespace: ${sentinel.namespace}
        metadata:
          user:
            name: ${spring.security.user.name}  # 向注册中心注册本服务端点访问认证信息。这里不是配置访问客户端端点的认证信息，是本服务的
            password: ${spring.security.user.password}
            # management.context-path= # 访问地址，如果不是默认的actuator则需要配置

        watch:
          enabled: false # 是否开启NacosWatch,向spring boot admin刷新新注册的服务
        watch-delay: 10000 # Nacos watch执行时间间隔默认30s
sentinel:
  server-addr: 192.168.5.105:8848
  namespace:

---
# profile多环境配置
---
spring:
  profiles: pressure
sentinel:
  server-addr: 192.168.5.105:8848
  namespace: 6963187d-afaf-433c-ba14-42831641cabd
# bootstrap配置加载优先于application配置。
---
spring:
  profiles:
    # maven变量，打包时会被替换成相应的profile。如果需要本地启动，则需要修改为对应的profile
    # 这里的profile激活只用于本地启动，实际线上环境会使用启动参数激活profile
    active: pressure #@profileActive@